services:

    keycloak:
        image: docker_keycloak:3
        environment:
            - KEYCLOAK_ADMIN=admin
            - KEYCLOAK_ADMIN_PASSWORD=admin
        command: start-dev --health-enabled=true
        extra_hosts:
            - "keycloak:172.17.0.1"
            - "user-service:172.17.0.1"
        ports:
            - 8080:8080
#        healthcheck:
#            test: [ "CMD-SHELL", "bash test.sh" ]
#            interval: 30s
#            timeout: 5s
#            retries: 3
        networks:
            - my-network

    postgres:
        image: postgres:15
        ports:
            - 5432:5432
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U bestuser" ]
            interval: 10s
            timeout: 5s
            retries: 3
        environment:
            - POSTGRES_USER=bestuser
            - POSTGRES_PASSWORD=bestuser
            - POSTGRES_DB=postgresDB
        networks:
            - my-network

    zookeeper:
        image: zookeeper:latest
        ports:
            - "2181:2181"
        networks:
            - my-network

    kafka:
        image: wurstmeister/kafka:latest
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        depends_on:
            zookeeper:
                condition: service_started
        networks:
            - my-network

    discovery-service:
        environment:
            - DISCOVERY_SERVICE_PORT=8181
        ports:
            - 8181:8181
        healthcheck:
            test: [ "CMD-SHELL", "curl -f localhost:8181" ]
            interval: 5s
            timeout: 2s
            retries: 3
        build: ./discovery-service
        networks:
            - my-network

    config-service:
        environment:
            - DISCOVERY_SERVICE_PORT=8181
        build: ./config-service
        ports:
            - 8086:8086
        healthcheck:
            test: [ "CMD-SHELL", "curl -f localhost:8086/actuator/health" ]
            interval: 5s
            timeout: 2s
            retries: 3
        extra_hosts:
            - "user-service:172.17.0.1"
            - "keycloak:172.17.0.1"
        depends_on:
            discovery-service:
                condition: service_healthy
        networks:
            - my-network

    gateway-service:
        environment:
            - DISCOVERY_SERVICE_PORT=8181
            - GATEWAY_SERVICE_PORT=8081
            - USER_SERVICE_PORT=8082
            - PRODUCT_SERVICE_PORT=8083
            - INVENTORY_SERVICE_PORT=8084
            - ORDER_SERVICE_PORT=8085
            - CONFIG_SERVICE_PORT=8086
        ports:
            - 8081:8081
        healthcheck:
            test: [ "CMD-SHELL", "curl -f localhost:8081/actuator/health" ]
            interval: 5s
            timeout: 2s
            retries: 3
        build: ./gateway-service
        depends_on:
            keycloak:
                condition: service_started
            discovery-service:
                condition: service_healthy
            config-service:
                condition: service_healthy

        extra_hosts:
            - "user-service:172.17.0.1"
            - "keycloak:172.17.0.1"
        networks:
            - my-network

    user-service:
        environment:
            - CONFIG_SERVICE_PORT=8086
            - DISCOVERY_SERVICE_PORT=8181
            - USER_SERVICE_PORT=8082
            - GATEWAY_SERVICE_PORT=8081
        build: ./user-service
        ports:
            - 8082:8082
        extra_hosts:
            - "keycloak:172.17.0.1"
            - "user-service:172.17.0.1"
        depends_on:
            discovery-service:
                condition: service_healthy
            config-service:
                condition: service_healthy
            keycloak:
                condition: service_started
            gateway-service:
                condition: service_healthy
        networks:
            - my-network

    inventory-service:
        build: ./inventory-service
        ports:
            - 8084:8084
        environment:
            - INVENTORY_SERVICE_PORT=8084
            - CONFIG_SERVICE_PORT=8086
            - DISCOVERY_SERVICE_PORT=8181
        depends_on:
            discovery-service:
                condition: service_healthy
            config-service:
                condition: service_healthy
            gateway-service:
                condition: service_healthy
            postgres:
                condition: service_healthy
        networks:
            - my-network

    product-service:
        build: ./product-service
        ports:
            - 8083:8083
        environment:
            - PRODUCT_SERVICE_PORT=8083
            - CONFIG_SERVICE_PORT=8086
            - DISCOVERY_SERVICE_PORT=8181
        depends_on:
            discovery-service:
                condition: service_healthy
            config-service:
                condition: service_healthy
            gateway-service:
                condition: service_healthy
            postgres:
                condition: service_healthy
        networks:
            - my-network

    order-service:
        build: ./order-service
        ports:
            - 8085:8085
        environment:
            - ORDER_SERVICE_PORT=8085
            - CONFIG_SERVICE_PORT=8086
            - DISCOVERY_SERVICE_PORT=8181
        depends_on:
            discovery-service:
                condition: service_healthy
            config-service:
                condition: service_healthy
            gateway-service:
                condition: service_healthy
            postgres:
                condition: service_healthy
        networks:
            - my-network

networks:
    my-network:
